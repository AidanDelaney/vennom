package org.eulerdiagrams.display.apCircles;import java.io.*;import java.util.ArrayList;import java.util.HashMap;import java.util.HashSet;import java.awt.Point;import java.awt.event.*;import java.awt.geom.Ellipse2D;import java.awt.geom.Point2D;import org.eulerdiagrams.display.graph.GraphUtility;import org.eulerdiagrams.vennom.apCircles.*;import org.eulerdiagrams.vennom.graph.Edge;import org.eulerdiagrams.vennom.graph.EdgeType;import org.eulerdiagrams.vennom.graph.Graph;import org.eulerdiagrams.vennom.graph.Node;/** * Just for quick testing of methods. */public class CircleUtilityTest extends GraphUtility implements Serializable {/**	 * 	 */	private static final long serialVersionUID = 1L;/** Trivial constructor. */	public CircleUtilityTest() {		super(KeyEvent.VK_T,"Test",KeyEvent.VK_T);	}	public void apply() {/*		AreaSpecification as;				as = new AreaSpecification("a 50\nb 30\nab 40\nc 10\nac 10");		Graph g = as.generatePiercedAugmentedIntersectionGraph();		System.out.println(g);*/	}			}